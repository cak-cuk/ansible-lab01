---
# Initialise distribution-specific variables
- name: |
    Load a variable file based on the OS type, or a default
    if not found. Using free-form to specify the file.
  ansible.builtin.include_vars: "{{ lookup('ansible.builtin.first_found', params) }}"
  vars:
    params:
      files:
        - all.yaml
        - '{{ ansible_distribution }}.yaml'
      paths:
        - '../group_vars'

- name: |
    Load a variable file based on the hostname, or a default
    if not found. Using free-form to specify the file.
  ansible.builtin.include_vars: "{{ lookup('ansible.builtin.first_found', params) }}"
  vars:
    params:
      files:
        - '{{ ansible_hostname }}.yaml'
      paths:
        - '../host_vars'

- name: Update and upgrade apt
  become: true
  ansible.builtin.apt:
    update_cache: yes
    upgrade: yes
    cache_valid_time: 86400
    autoremove: yes
    autoclean: yes
  when: ansible_os_family == 'Debian'

- name: Install BIND in centos
  ansible.builtin.package:
    pkg: "{{ item }}"
    state: present
  become: true
  with_items:
    - python-netaddr
    - python-dns
    - bind
    - bind-utils
  tags: bind
  when: ansible_distribution == "CentOS"

# file to set keys for XFR authentication
- name: Create extra config for authenticated XFR request
  ansible.builtin.template:
    src: templates/auth_transfer.j2
    dest: "{{ bind_conf_dir }}/{{ auth_file }}"
    mode: 0640
    owner: root
    group: "{{ bind_group }}"
  become: true
  when: bind_dns_keys is defined and bind_dns_keys | length > 0
  tags: bind
